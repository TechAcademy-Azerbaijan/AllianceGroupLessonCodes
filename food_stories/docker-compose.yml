# Use postgres/example user/password credentials
version: '3.1'

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/vhost/:/etc/nginx/vhost.d:ro
      - ./nginx/conf.d/client_max_body_size.conf:/etc/nginx/conf.d/client_max_body_size.conf:ro
      - ./static/:/code/static/
      - ./media/:/code/media/

  db:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./pgdb:/var/lib/postgresql/data
    env_file: ./.env

  web:
    build: .
    restart: always
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    volumes:
      - .:/code
    depends_on:
      - "db"
    env_file: ./.env

  redis:
    image: redis
    ports:
      - 6379:6379

  celery:
    build:
      context: .
      dockerfile: celery.dockerfile
    restart: always
    command: celery -A food_stories worker --beat --scheduler django --loglevel=info
    volumes:
      - .:/code
    depends_on:
      - "db"
      - "redis"
    env_file: ./.env